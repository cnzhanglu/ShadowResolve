name: ShadowResolve-build

# 控制工作流何时运行
on:
  # 当 push 或 pull request 事件触发时运行工作流，但仅适用于 "main" 分支
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # 允许您手动从 Actions 选项卡中运行此工作流
  workflow_dispatch:

# 一个工作流包含一个或多个作业，可以按顺序或并行运行
jobs:

  build:
    # 在 Linux环境下运行
    runs-on: ubuntu-latest

    steps:

      # 检出仓库
      - uses: actions/checkout@v3

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'  # 使用的 Python 版本
          architecture: 'x64'      # 架构，可选值为 x64 或 x86

      # 安装依赖
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # 将 Python 脚本编译成独立的可执行文件
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: Query.py
          onefile: false
          standalone: true
          output-dir: o/Linux

      # 打包文件为压缩包
      - name: Compress files
        run: |
          zip -r ShadowResolve_linuxX64.zip o/Linux/Query.dist

      # 上传 Artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
            name: ${{ runner.os }} Build
            path: |
              ShadowResolve_linuxX64.zip

      # 获取当前日期
      - name: Get Current Date
        id: get_date
        run: echo "::set-output name=date::$(date +%Y-%m-%d)"

      # 创建 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: preview-linux-${{ steps.get_date.outputs.date }}-${{ github.run_id }}
          release_name: Development Preview Release ${{ steps.get_date.outputs.date }}-${{ github.run_id }}
          body: Release notes go here
          draft: false
          prerelease: true

      # 上传 Release 资产
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ShadowResolve_linuxX64.zip
          asset_name: ShadowResolve_linuxX64.zip
          asset_content_type: application/octet-stream
